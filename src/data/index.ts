import type { ResumeSchema } from '@/types/resume';

const INITIAL_RESUME_CONTENT = `
# 能力概述

- 熟练掌握 HTML、CSS、JavaScript、Typescript 以及 AOP、FP 等设计思想
- 深入理解 React 源码，并研究其内部实现，了解 Vue 的基本原理，对两者具备大型项目的开发经验
- 熟悉 Webpack 和 Rollup 的基本配置和使用，可通过实现 Loader、Plugin 解决业务上的问题
- 熟悉 Node.js 的基本使用，开发过脚手架工具，熟悉 Monorepo 开发及包管理器之间的差异
- 熟悉微前端开发，熟悉多种微前端实现原理，如 qiankun、wujie 等
- 掌握前端常见性能优化手段，包括代码分割、懒加载、资源优化等技术
- 掌握前端常用的设计模式，能够在合适的场景下应用这些模式，提高代码的可维护性和可扩展性
- 对流行的 AI 相关概念 Agent、LLM 应用、RAG 等有一定的了解
- 对生成式 AI 概念有扎实的理解，了解 LangChain、LangGraph 等框架的使用

# 工作经历

前端开发工程师                                        北京字跳网络技术有限公司                                        2021/04 - 2024/04

工作描述：围绕飞书人事商业化业务进行迭代开发，包括基础架构开发，主导过组件物料、脚手架工具、监控体系的设计和落地。积极参与团队内部的技术分享，吸收并输出自己的理解。

# 项目经历

## 飞书人事

### 项目简介

飞书人事是飞书的商业化人力资源管理系统，该系统整合了组织、团队、员工基本信息、入转调离续、汇报线、履历、OKR、绩效等多维度数据。

技术栈：Webapck、React、React Router、Zustand、Garfish、Axios、Universe Design

### 工作内容与成果

- 参与飞书人事项目整体架构设计，包含技术选型、方案评审与设计，并主导完成核心模块开发
- 封装 ProTable 表格组件，通过插件化思想进行架构设计，支持动态列配置、字段权限控制、筛选缓存、拖拽列宽等，提升表格使用效率与一致性
- 封装大文件处理基础库，使用 Web Worker + ExcelJS 实现前端大数据导出处理，避免主线程卡顿；导出采用 Blob 流分片 + zip 压缩下载，导出速度提升 60%，用户响应时间缩短 50%
- 深度优化 Webpack 构建流程，集成 swc、thread-loader、持久化缓存等技术，从多维度提升构建效率，成功的将构建时间从最初的 1 分多钟缩减至 20 秒内，极大地提高了开发和部署效率
- 首屏按需预加载关键模块、动态引入路由，减少资源冗余加载，设计并落地接口预请求方案，首屏加载耗时缩短约 45%

## 脚手架、物料组件库

### 项目简介

为提升开发效率，降低团队成员间开发成本，一个统一规范的业务脚手架和物料组件库，支持一键接入开发模板与 Lint 校验。

### 工作内容与成果

- 脚手架工具可提供多场景的项目模板，如：SPA、Monorepo、组件物料、基础库等，并针对不同的业务场景预置开箱即用的功能和配置
- 通过 Changesets 实现 CHANGLOG 的自动化更新，基于 Git Action 实现 CI 实现自动化发布
- 使用 ESlint、Prettier、Husky、Stylelint、Commitlint、Markdownlint 等工具统一规范
- 搭建物料组件库文档站点，集成组件预览、API 文档自动生成、在线调试等功能，降低团队成员学习与使用成本
- 建立物料组件版本管理机制，通过语义化版本控制和依赖更新通知，确保团队使用稳定可靠的组件版本，减少因版本不一致导致的问题

## 代码影响面分析工具

### 项目简介

为降低代码变更风险，提升代码评审效率和发布质量，开发了一个前端代码影响面分析工具，通过静态分析和依赖图谱构建，自动识别代码变更的影响范围，辅助测试与评审决策。

### 工作内容与成果

- 基于 Babel/TypeScript Compiler API 实现代码静态分析，构建项目的依赖关系图谱，精确识别函数、组件、模块之间的调用关系和依赖链路
- 通过 Git Diff 分析代码变更，结合依赖图谱向上追溯受影响的页面、组件和业务模块，自动生成影响面分析报告，覆盖率达到 95% 以上
- 集成到 GitLab CI/CD 流程，在 Merge Request 阶段自动触发分析并生成可视化报告，标注高风险变更区域，提升 Code Review 效率 40%
- 建立变更风险评分机制，综合考虑影响范围、代码复杂度、历史 Bug 率等因素，为每次变更打分并生成测试建议，减少线上故障 30%
- 沉淀核心依赖识别算法，支持跨项目、跨仓库的依赖分析，为 Monorepo 架构下的多包联动提供技术支撑

# 学历专业

本科 \\ 东华理工大学 \\ 软件工程                                                                                                                2017 - 2021
`;

// 初始数据
export const INITIAL_RESUME_SCHEMA: ResumeSchema = {
	name: '匡琳锋',
	position: '高级前端工程师',
	phone: '13697925770',
	email: 'percykuang@foxmail.com',
	age: '27',
	gender: '男',
	content: INITIAL_RESUME_CONTENT
};
